import React from 'react';

function PDFLayout({ data, recommendations }) {
  return (
    <div className="pdf-document">
      {/* Header */}
      <div className="pdf-header">
        <img 
          src={process.env.PUBLIC_URL + '/embers-logo.png'}
          alt="Embers Staffing" 
          className="pdf-logo"
          style={{
            width: '200px',
            marginBottom: '20px',
            display: 'block',
            marginLeft: 'auto',
            marginRight: 'auto'
          }}
        />
        <h1>Construction Career Recommendations</h1>
        <div className="pdf-date">{new Date().toLocaleDateString()}</div>
      </div>

      {/* Executive Summary */}
      <section className="pdf-section">
        <h2>Executive Summary</h2>
        <div className="summary-grid">
          <div>
            <h3>Career Level</h3>
            <p>{data.personalInfo?.yearsInConstruction || 0} Years Experience</p>
          </div>
          <div>
            <h3>Target Role</h3>
            <p>{data.goals?.shortTerm?.[0] || 'Not specified'}</p>
          </div>
          <div>
            <h3>Salary Potential</h3>
            <p>${recommendations.calculateSalaryRanges()}/year</p>
          </div>
        </div>
      </section>

      {/* Key Recommendations - Force new page */}
      <section className="pdf-section page-break-before">
        <h2>Key Recommendations</h2>
        <div className="recommendations-grid">
          {/* Career Path */}
          <div className="recommendation-card">
            <h3>Recommended Career Path</h3>
            {recommendations.getCareerPaths()[0]?.steps.map((step, index) => (
              <div key={index} className="career-step">
                <span className="step-number">{index + 1}</span>
                <p>{step}</p>
              </div>
            ))}
          </div>

          {/* Priority Certifications */}
          <div className="recommendation-card">
            <h3>Priority Certifications</h3>
            {recommendations.getRecommendedCertifications()
              .filter(cert => cert.priority === 'High')
              .map((cert, index) => (
                <div key={index} className="certification-item">
                  <h4>{cert.name}</h4>
                  <p>{cert.description}</p>
                  <div className="cert-details">
                    <span>Timeline: {cert.timeline}</span>
                    <span>Cost: {cert.cost}</span>
                  </div>
                </div>
              ))}
          </div>
        </div>
      </section>

      {/* Development Plan - Force new page */}
      <section className="pdf-section page-break-before">
        <h2>Professional Development Plan</h2>
        <div className="timeline">
          {/* Short-term (0-6 months) */}
          <div className="timeline-section">
            <h3>Short-term (0-6 months)</h3>
            <ul>
              {recommendations.getRecommendedCertifications()
                .filter(cert => cert.priority === 'High')
                .map((cert, index) => (
                  <li key={index}>{cert.name}</li>
                ))}
            </ul>
          </div>

          {/* Mid-term (6-18 months) */}
          <div className="timeline-section">
            <h3>Mid-term (6-18 months)</h3>
            <ul>
              {recommendations.getRecommendedCertifications()
                .filter(cert => cert.priority === 'Medium')
                .map((cert, index) => (
                  <li key={index}>{cert.name}</li>
                ))}
            </ul>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="pdf-footer page-break-before">
        <p>Generated by Embers Staffing Solutions</p>
        <p>This report is personalized based on your career assessment responses</p>
      </footer>
    </div>
  );
}

export default PDFLayout; 